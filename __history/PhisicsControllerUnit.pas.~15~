unit PhisicsControllerUnit;

interface

uses
  Test1Unit,
  TestsUnit,
  MenuUnit,
  MainUnit,
  System.Generics.Collections,
  ControllersUnit;

type
  PhisicsController = class(TInterfacedObject, Controllers)
  private
    Test: Tests;
    /// <link>aggregation</link>
    Menu1: Main;
  public
    procedure setTest(caption: string);
    function getMenu: TList<string>;
    function getQuest: TList<string>;
    function getAnswerTrue: TDictionary<integer, string>;
    function getAnswerFalse: TDictionary<integer, string>;
  end;

implementation

{ PhisicsController }

function PhisicsController.getAnswerFalse: TDictionary<string, integer>;
begin
  result := TDictionary<string, integer>.create;
  result := Test.getAnswerFalse;
end;

function PhisicsController.getAnswerTrue: TDictionary<string, integer>;
begin
  result := TDictionary<string, integer>.create;
  result := Test.getAnswerTrue;
end;

function PhisicsController.getQuest: TList<string>;
begin
  result := TList<string>.create;
  result := Test.getQuest;
end;

function PhisicsController.getMenu: TList<string>;
begin
  result := TList<string>.create;
  Menu1 := Menu.create;
  result := Menu1.getMenu;
end;

procedure PhisicsController.setTest(caption: string);
begin
  Test := Test1.create;
  Test.setTest(caption);
end;

end.
